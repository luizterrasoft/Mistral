<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>How to use TtsqZip</title>
</head>

<body>

<h1 align="center">How to use TtsqZip</h1>
<p>&nbsp;</p>
<h2>Introduction</h2>
<p>TtsqZip is a delphi freeware component used to compress files using Info-zip's implementations.
The component is able to generate PKZIP-compatible archives, which are recognized by most popular compressors
like Winzip and WinRar. The component is built on Theodoros Bebekis's translation(zip32.pas) of Info-zip's zip32.dll.</p>
<p>The key features of TtsqZip are:</p>
<ul>
  <li>free even for commercial purpose</li>
  <li>very fast, same speed level as winzip since both the component and winzip
    uses the same c core code</li>
  <li>mature and stable since it is build on Info-zip's implementations.</li>
  <li>easy to use. Read on to see how easy it is.</li>
  <li>exposing all callbacks of the zip32.dll. ready for customization.</li>
  <li>working with the latest versions of zip32.dll(v2.3)<br>
  </li>
</ul>
<h2>Compress files</h2>
<p>In the following descriptions, we assume that we put a TtsqZip object on a
form and the object name is tsqzip1.</p>
<ol>
  <li>
<h3>Simplest case: compress files</h3>
  </li>
<pre>
<span style="background-color: #FFFFFF"><font color="#0000FF">tsqzip1.ZipFileName := 'c:\test_tsqzip.zip';
tsqzip1.FilesToZip.Clear;
tsqzip1.FilesToZip.Add('c:\mydir\file1.exe');
tsqzip1.FilesToZip.Add('c:\mydir\file2.txt');
tsqzip1.Execute; //compress files</font></span>
</pre>
  <li>
<h3>Compress a folder its sub-folders</h3>
<pre>
<font color="#0000FF">tsqzip1.ZipFileName := 'c:\test_tsqzip.zip';
tsqzip1.FilesToZip.Clear;
tsqzip1.FilesToZip.Add('c:\mydir\');
tsqZip1.ZipOptions.<b>RecurseSubDirs := rsdRecursive</b>;
tsqzip1.Execute;</font>
</pre>
  </li>
  
  <li>
<h3>Compress a folder its sub-folders, but only store relative paths</h3>
<pre>
<font color="#0000FF">tsqzip1.ZipFileName := 'c:\test_tsqzip.zip';
tsqZip1.ZipOptions.<b>RootDir</b> := 'c:\mydir\';
tsqzip1.FilesToZip.Clear;
tsqzip1.FilesToZip.Add('.'); //use relative file path!
tsqZip1.ZipOptions.RecurseSubDirs := rsdRecursive;
tsqzip1.Execute;</font>
</pre>
  </li>
  
  <li>
<h3>Compress files and show progress information</h3>
This involves the application of events of Ttsqzip. There are two events associated with this task, 
and they are OnPrint and OnService. Suppose that there is a TMemo object called memo1, 
a TProgressBar object called ProgressBar1, and a form-level variable FAborted that is assigned 
True when an Abort butten is pressed, following code should give you some clues on how to 
use these event handlers:
<pre>
<font color="#0000FF">procedure TForm1.tsqZip1Print(Buffer: PChar; Size: Cardinal;
  var PResult: Integer);
begin
  memo1.Lines.Add(Buffer);
  Application.ProcessMessages;
end;

procedure TForm1.tsqZip1Service(Buffer: PChar; Size: Cardinal;
  var PResult: Integer);
begin
  memo1.Lines.Add('---&gt;' + Buffer);
  ProgressBar1.Position := ProgressBar1.Position + 1;
  Application.ProcessMessages;
  if FAborted then begin
    //Abort button was pressed, terminate the zip process by setting PResult to 1
    PResult := 1;
  end;
end;</font>
</pre>
  </li>
</ol>

<h2>Further readings</h2>
<p>The above brief description is intended to serve as a quick start to use
TtsqZip. If you
need more information, please go to Info-zip's home page <a href="http://www.info-zip.org/">http://www.info-zip.org/</a>
to read or download something to learn. </p>

</body>

</html>
